enum Code {
  ErrUnknown = "E001",
  ErrNotFound = "E002",
  ErrNotAvailable = "E003",
  ErrUnauthorized = "E004",
  ErrInvalidToken = "E005",
  ErrInvalidFormat = "E006",
  ErrInvalidHeader = "E007",
  ErrWrongCredentials = "E008",
}

interface Warning {
  title: string;
  text: string;
  level: string;
}

const warnings: { [key: string]: Warning } = {
  [Code.ErrUnknown]: {
    title: "Oops! Something went wrong",
    text: "We're sorry, but something unexpected happened on our server. We are working to resolve the issue as soon as possible.",
    level: "error",
  },
  [Code.ErrNotFound]: {
    title: "Forbidden",
    text: "We're sorry, but you do not have permission to perform this action. Please check your credentials.",
    level: "error",
  },
  [Code.ErrNotAvailable]: {
    title: "Email verification required",
    text: "To complete this process, please verify your email address by clicking the link we've sent to your email.",
    level: "info",
  },
  [Code.ErrUnauthorized]: {
    title: "Two-Factor authentication required",
    text: "For your security, 2FA is required to access your account. Please enter the 6-code generated by your 2FA app.",
    level: "info",
  },
  [Code.ErrInvalidToken]: {
    title: "Forbidden",
    text: "We're sorry, but you do not have permission to perform this action. Please check your credentials.",
    level: "error",
  },
  [Code.ErrInvalidFormat]: {
    title: "Invalid format",
    text: "We're sorry, but the format of one or more parameters is invalid. Please ensure that your username and password meet the required format and try again.",
    level: "error",
  },
  [Code.ErrInvalidHeader]: {
    title: "Forbidden",
    text: "We're sorry, but you do not have permission to perform this action. Please check your credentials.",
    level: "error",
  },
  [Code.ErrWrongCredentials]: {
    title: "Incorrect username or password",
    text: "We're sorry, but the username or password you entered is incorrect. Please check your credentials and try again.",
    level: "error",
  },
};

const getWarning = (code: string): Warning => {
  return warnings[code] ?? warnings[Code.ErrUnknown];
};

export { Code, Warning, getWarning };
